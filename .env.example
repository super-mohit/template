# ===================================================================
#      AI COMMAND CENTER - ENVIRONMENT CONFIGURATION
# -------------------------------------------------------------------
#  Copy this file to .env and fill in the required secrets.
#  This file is the single source of truth for local development.
# ===================================================================

# ------------------------------------------------------------
# GENERAL APPLICATION SETTINGS
# ------------------------------------------------------------
# The base path for the entire application, used for reverse proxy routing.
# Example: /myapp -> http://localhost:3001/myapp
# IMPORTANT: Define this ONCE here, and it will be used everywhere else automatically.
BASE_PATH=/app1

# ------------------------------------------------------------
# BACKEND (FastAPI) CONFIGURATION
# ------------------------------------------------------------
# The full URL of the frontend, used for CORS configuration.
# Automatically includes the base path defined above.
FRONTEND_URL=http://localhost:3001${BASE_PATH}

# ------------------------------------------------------------
# FRONTEND (Next.js) CONFIGURATION
# ------------------------------------------------------------
# The public URL for the backend API that the browser will call.
NEXT_PUBLIC_API_URL=http://localhost:8001

# The base path for the frontend application.
# Automatically uses the BASE_PATH defined above.
NEXT_PUBLIC_BASE_PATH=${BASE_PATH}

# ------------------------------------------------------------
# KEYCLOAK & AUTHENTICATION CONFIGURATION
# ------------------------------------------------------------
# --- Keycloak Service ---
# These variables are for the backend and frontend to communicate with Keycloak.
# For container-to-container communication (backend -> keycloak), use the service name.
KEYCLOAK_SERVER_URL=http://keycloak:8080
KEYCLOAK_REALM=supervity
KEYCLOAK_CLIENT_ID=super-client-dnh-dev-0001
KEYCLOAK_AUDIENCE=account

# The public-facing URL for Keycloak, used by NextAuth (browser-accessible)
NEXT_PUBLIC_KEYCLOAK_URL=http://localhost:8080

# The client secret for authenticating with Keycloak.
# Default value for development: supervity-is-super
# This is pre-configured in the imported realm file (keycloak/import/supervity-realm.json)
# ⚠️ For production, generate a new secret from the Keycloak Admin UI:
# Path: Clients -> super-client-dnh-dev-0001 -> Credentials -> Regenerate Secret
KEYCLOAK_CLIENT_SECRET=supervity-is-super

# --- NextAuth ---
# The canonical URL of your NextAuth.js application.
# Automatically includes the base path defined above.
NEXTAUTH_URL=http://localhost:3001${BASE_PATH}/api/auth

# REQUIRED: A secret used to sign and encrypt NextAuth.js tokens.
# Generate one with: openssl rand -base64 32
# For development, you can use the default below, but MUST change for production!
NEXTAUTH_SECRET=your-super-secret-nextauth-key-change-this-in-production

# ------------------------------------------------------------
# LOGGING & DEBUGGING
# ------------------------------------------------------------
# Set to "true" to enable detailed console logs for the authorization flow.
# Recommended for development, should be "false" in production.
SUPERVITY_AUTH_DEBUG=true

# Set the log level for the backend service.
# Options: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# ------------------------------------------------------------
# DATABASE (PostgreSQL) CONFIGURATION
# ------------------------------------------------------------
POSTGRES_USER=user
POSTGRES_PASSWORD=password
POSTGRES_DB=app_db
POSTGRES_HOST=postgres
POSTGRES_PORT=5432

# This is the full connection string used by SQLAlchemy
# It is constructed from the variables above.
DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}

# ===================================================================
#      KEYCLOAK DATABASE CONFIGURATION (PostgreSQL)
# -------------------------------------------------------------------
#  These variables configure Keycloak to use a PostgreSQL database
#  instead of the default H2 file-based database.
# ===================================================================

# --- Credentials for the Keycloak PostgreSQL Container ---
# These are read by the 'postgres_keycloak' service to initialize the database.
KEYCLOAK_DB_USER=keycloak
KEYCLOAK_DB_PASSWORD=password
KEYCLOAK_DB_NAME=keycloak_db

# --- Connection Settings for the Keycloak Service ---
# These are read by the 'keycloak' service to connect to its database.
# The 'KC_' prefix is required by Keycloak.
KC_DB=postgres
KC_DB_URL_HOST=postgres_keycloak
KC_DB_URL_DATABASE=keycloak_db
KC_DB_USERNAME=keycloak
KC_DB_PASSWORD=password

GEMINI_API_KEY=your-google-gemini-api-key